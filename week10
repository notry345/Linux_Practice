### Visual Studio Code랑 Xampp 다운로드
### Xampp에서 Apache,MySQL 모듈 실행
### cmd 열기
cd..
cd..
cd xampp
cd mysql
cd bin
C:\xampp\mysql\bin>mysql -u root -p
Enter password:(엔터 두 번)
MariaDB [(none)]>create database sampledb; //sampledb라는 이름을 가진 database 생성
MariaDB [(none)]>show databases; //생성된 database 확인
### VScode에서 (파일이름).php 만들고 코드 적기
### 예제에서 'sample'-->'root'로, 'password'-->''로 변경
### 파일 저장 경로 = C:\xampp\htdocs
### chrome 브라우저 창에 http://localhost/(파일이름).php

#dbtest2.php
<HTML><HEAD> <TITLE>PHP 테스트</TITLE></HEAD><BODY>
    <?php $mysqli = new mysqli('localhost','root','','sampledb');
    if($mysqli->connect_error){
        die('Connect Error:('.$mysqpli->connect_errno.')'.$mysqli->connect_error);
    }
    print 'mysqli 클래스를 통해 접속이 성공하였습니다.';
    $mysqli->close();
    ?></BODY></HTML>
   
#dbtest3.php
<HTML>
<HEAD>
    <TITLE>PHP 테스트</TITLE> 
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    </HEAD>
    <BODY bgcolor="#FFFFFF" text="#000000">
        <FONT size="4">PHP 테스트</FONT>
        <FORM name="form1" method="post" action="view.php">
            성:<BR>
            <INPUT type="text" name="last_name"><BR> 
            연령:<BR>
            <INPUT type="text" name="age"><BR>
            <INPUT type="submit" value="송신">
        </FORM>
    </BODY>
</HTML>

#dbtest4.php
<html><head><title>PHP TEST</test></head><body>
    <?php
    try{$pdo = new PDO('mysql:host=localhost;dbname=sampledb;charset=utf8','samplee','password');
    $pdo->setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTIOM);
    $pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES,false);
    print "접속하였습니다.";}
    catch(PDOExeption $Exception){
        die('접속 오류:'.$Exception->getMessage());
    }?></body></html>
    
#dbtest5.php
<?php // 1. 이름이 붙여진 placeholder
//프론트앤드 View에서 입력된 데이터가 데이터베이스내부로 저장되기 위해서 들어올때 플레이스홀더 활용.
//입력된 데이터가 연결되는 레이블 앞에 :이 붙음
$sql = "INSERT INTO member (last_name, first_name, age) VALUES (:last_name, :first_name, :age )";
$stmh = $pdo->prepare($sql);
$stmh->indValue(':last_name',$_POST['last_name']);
$stmh->indValue(':first_name',$_POST['first_name']);
$stmh->indValue(':age',$_POST['age']);
$stmh->execute();
//개념설명용 코드. 동작하지 않음.
?>

<?php //2. ? placeholder
$sql = "INSET INTO member (last_name, first_name, age) VALUES (?,?,?)";
$stmh = $pdo->prepare($sql);
$stmh->bindValue(1,$_POST['last_name']);
$stmh->bindValue(2,$_POST['first_name']);
$stmh->bindValue(3,$_POST['age']);
$stmh->execute();
//앞에서의 플레이스홀더는 레이블을 활용했다면
//여기서는 입력되는 parameter의 순서에 맞춰서 ? 물음표를 대기시켜놓음
//입력데이터를 받아줄 statement, 곧 문장을 변수에 저장함
//그리고 그것을 preparestatement로 전환시켜줄 prepare메서드의 파라메터로 주입함
//그리고 실제 외부에서 들어온 데이터는
//bindValue메서드를 통해서 $_POST변수에 저장된 키를 통해서 값을 1,2,3에 넣어줌
?>

#MYDB.php
<?php function db_connect(){ $db_user = "root";
$db_pass = "password";
$db_host = "localhost";
$db_name = "sampledb";
$db_type = "mysql";
$dsn = "db_type:host=$db_host;dbname=$db_name;charset=utf8";
try{
    $pdo = new PDO($dsn,$db_user,$db_pass);
    $pdo->setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);
    $pdo->setAtrribute(PDO::ATTR_EMULATE_PREPARES,false);
}
catch (PDOException $Exception){
    die('오류:'.$Exception->getMessage());
}
return $pdo;}?>

#form.html
<HTML>
<HEAD>
    <TITLE>PHP 테스트</TITLE> 
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    </HEAD>
    <BODY bgcolor="#FFFFFF" text="#000000">
        <FONT size="4">PHP 테스트</FONT>
        <FORM name="form1" method="post" action="view.php">
            성:<BR>
            <INPUT type="text" name="last_name"><BR> 
            연령:<BR>
            <INPUT type="text" name="age"><BR>
            <INPUT type="submit" value="송신">
        </FORM>
    </BODY>
</HTML>

#view.php
<HTML>
<HEAD>
    <TITLE>PHP 테스트</TITLE>
    </HEAD>
    <BODY>
        <?php
        $db_user = "root";
        $db_pass = "";
        $db_host = "localhost";
        $db_name = "sampledb";
        $db_type = "mysql";
        $dsn = "$db_type:host=$db_host;dbname=$db_name;charset=utf8";
        try{
            $pdo = new PDO($dsn,$db_user,$db_pass);
            $pdo->setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);
            $pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES,false);
            print "접속하였습니다.<br>";
        }
        catch(PDOException $Exception){
            die('오류:'.$Exception->getMessage());
        }
        try{
            $pdo->beginTransaction();
            $sql = "INSERT INTO member (last_name, first_name, age)
            VALUES ( :last_name, :first_name, :age)";
            $stmh = $pdo->prepare($sql);
            $stmh->bindValue(':last_name',$_POST['last_name'],PDO::PARAM_STR);
            $stmh->bindValue(':first_name',$_POST['first_name'],PDO::PARAM_STR);
            $stmh->bindValue(':age',$_POST['age'],PDO::PARAM_INT);
            $stmh->execute();
            $pdo->commit();
            print "데이터를 ".$stmh->rowCount()."건 입력하였습니다.<br>";
        }
        catch(PDOException $Exception){
            $pdo->rollBack();
            print "오류:".$Exception->getMessage();
        }
        ?>
    </BODY>
</HTML>

#search.html
<HTML>
    <HEAD>
        <TITLE>PHP 테스트</TITLE>
        <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    </HEAD>
    <BODY bgcolor="#FFFFFF" text="#000000">
        <FONT size="4">PHP 테스트</FONT>
        <FORM name="form1" method="post" action="list.php">
            이름:<BR> <INPUT type="text" name="search_key"><BR> <INPUT type="submit" value="검색하기">
        </FORM>
    </BODY>
</HTML>

#list.php
<HTML>
<HEAD>
        <TITLE>PHP 테스트</TITLE>
</HEAD>
<BODY>
    <?php
    $db_user = "sample"; //사용자명
    $db_pass = "password"; //패스워드
    $db_host = "localhost" //호스트명
    $db_name = "sampledb"; //데이터베이스명
    $db_type = "mysql" //데이터베이스 종류
    $dsn = "$sb_type:host=$db_host;dbname=$db_name;charset=utf8";
    try{
        $pdo = new PDO($dsn,$db_user,$db_pass);
        $pdo->setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);
        $pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES,false);
        print "접속하였습니다.<br>";

    }
    catch(PDOException $Exception){
        die('오류:'.$Exception->getMessage());
    }
    $search_key = '%'.$_POST['search_key'].'%';
    try{
        $sql = "SELECT * FROM member WHERE last_name like :last_name OR forst_name LIKE first_name ";
        $stmh = $pdo->prepare($sql);
        $stmh->bindValue(':last_name',$search_key,PDO::PARAM_STR);
        $stmh->bindValue(':first_name',$search_key,PDO::PRAM_STR);
        $stmh->execute();
        $count = $stmh->rowCount();
        print "검색결과는".$count."건입니다.<BR>";
    }
    catch(PDOException $Exception){
        print "오류:".$Exception->getMessage();
    }
    if($count<1){
        print "검색결과가 업습니다.<BR>";
    }
    else{
        ?>
        <TABLE width="450" border="1" cellspacint="0" cellpadding="8">
            <TBODY> 
                <TR> 
                    <TH>번호</TH> <TH>성</TH> <TH>이름</TH> <TH>연령</TH>
                </TR>
            <?php
            while($row = $stmh->fetch(PDO::FETCH_ASSOC>>>)){
                 ?>
                <TR>
                <TD align="center">
                    <?=htmlspecialchars($row['id'])?>
                </TD>
                <TD>
                    <?=htmlspecialchars($row['last_name'])?>
                </TD>
                <TD>
                    <?=htmlspecialchars($row['first_name'])?>
                </TD>
                <TD align="center">
                    <?=htmlspecialchars($row['age'])?>
                </TD>
            </TR>
            <?php
            }?>
            </TBODY>
        </TABLE>
        <?php}?>
    </BODY>
</HTML>
